/*
 * Fullish-Page
 * Core CSS
 */ 

.fullish-page {
	display: block;
	position: relative;
	width: 100%; // Should be equal to the maximum viewport width
	height: auto;

	.fullish-page-wrapper {
		display: block;
		position: relative;
		width: inherit;
		height: inherit;
	}

	.panel {
		display: flex;
		position: relative;
		justify-content: center;
		align-items: center;

		padding: 20px;
	}

	.panel-container {
		display: block;
		width: 100%;
	}
}

/*
 * Initialization stage
 *
 * Note: Execution order and html attribute is organized as follows:
 * # Initialization
 * 1. `beforeInit` is invoked.
 * 2. Attribute [data-fullish-page-mode] is added to .fullish-page 
 *     at the beginningn of `setMode`.
 * 3. Class name .fp-mode-full-page or .fp-mode-static is added to .fullish-page
 *     at the end of `setMode`.
 * 4. Class name .fp-initialized is added
 *     towards the end of `init`.
 * 5. `afterInit` is invoked.
 *
 * # Destroy
 * 1. `beforeDestroy` is invoked.
 * 2. 2-4 in initialization process is executed in reverse order 
 *     execpt to remove the attribute.
 * 3. `afterDestroy` is invoked.
 */
.fullish-page {
	// Static mode
	&[data-fullish-page-mode='static'],
	&.fp-mode-static {
	}

	// FullPage mode before initializing finishes
	// .fullish-page will grow to the total height of all panels (set by Javascript)
	&[data-fullish-page-mode='full-page'],
	&.fp-mode-full-page {
		.fullish-page-wrapper {
			position: sticky;
			top: 0;
			height: 100vh;
		}

		.panel {
			position: absolute;
			top: 0;
			left: 0;
			width: inherit;
			height: inherit;
			&:not(:first-child) {
				// Display only the first panel.
				// Will be overrode by GSAP autoAlpha
				visibility: hidden;
				opacity: 0;
			}
			.panel-container {
			}
		}
	}

	// Initialized State
	&.fp-initialized {
	}
}
